{{define "base"}}
    <!DOCTYPE html>
    <html lang="en" data-bs-theme="dark">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta
                name="description"
                content="Plan weekly meals, generate grocery lists, and organize recipes easily with MealSync. Save time and simplify cooking."
        >
        <title>{{template "title" .}} - MealSync</title>
        <link rel="icon" href="/static/favicon.svg" type="image/svg+xml">
        <link href="/static/css/bootstrap.min.css" rel="stylesheet">
    </head>
    <body>
    <header class="navbar navbar-expand-lg bg-body-tertiary">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">
                <svg
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 448 512"
                        fill="currentColor"
                        width="1em"
                        height="1em"
                        class="me-1"
                >
                    <g>
                        <g>
                            <path d="M274.9,50.65v-18.2c12.1-2.3,20.2-6.2,20.2-10.1c0-7-22.6-12.8-50.2-12.8s-50.2,5.8-50.2,12.8c0,4.3,7.8,7.8,20.2,10.1
v18.3H59.5l-16.7, 63.7h404.4l-16.7-63.8C430.5,50.65, 274.9, 50.65, 274.9, 50.65z"/>
                            <path d="M0,123.85c0,5.1,4.3,9.3,9.3,9.3h31.1l2.3-18.7H9.3C4.3,114.45,0,118.75,0,123.85z"/>
                            <path d="M480.7,114.45h-33.4l2.7,18.7H40.5v328.6c0,10.1,7.8,18.3,17.5,18.3h374.5c9.7,0,17.5-8.2,17.5-18.3v-328.6h30.3
c5.1, 0, 9.3-4.3, 9.3-9.3S485.7, 114.45, 480.7, 114.45z"/>
                        </g>
                    </g>
                </svg>
                MealSync
            </a>
            <button
                    class="navbar-toggler"
                    type="button"
                    data-bs-toggle="offcanvas"
                    data-bs-target="#sidebarMenu"
                    aria-controls="sidebarMenu"
                    aria-expanded="false"
                    aria-label="Toggle navigation"
            >
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>
    </header>

    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-2">
                <div
                        class="offcanvas-lg offcanvas-end"
                        tabindex="-1"
                        id="sidebarMenu"
                        aria-label="Navigation"
                >
                    <div class="offcanvas-header">
                        <button
                                type="button"
                                class="btn-close"
                                data-bs-dismiss="offcanvas"
                                data-bs-target="#sidebarMenu"
                                aria-label="Close"
                        ></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul class="nav flex-column">
                            <li class="nav-item">
                                <a class="nav-link" href="/">
                                    <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            viewBox="0 0 448 512"
                                            fill="currentColor"
                                            width="1em"
                                            height="1em"
                                            class="me-2"
                                    >
                                        <path d="M416 0C400 0 288 32 288 176l0 112c0 35.3 28.7 64 64 64l32 0 0 128c0 17.7 14.3 32 32 32s32-14.3 32-32l0-128 0-112 0-208c0-17.7-14.3-32-32-32zM64 16C64 7.8 57.9 1 49.7 .1S34.2 4.6 32.4 12.5L2.1 148.8C.7 155.1 0 161.5 0 167.9c0 45.9 35.1 83.6 80 87.7L80 480c0 17.7 14.3 32 32 32s32-14.3 32-32l0-224.4c44.9-4.1 80-41.8 80-87.7c0-6.4-.7-12.8-2.1-19.1L191.6 12.5c-1.8-8-9.3-13.3-17.4-12.4S160 7.8 160 16l0 134.2c0 5.4-4.4 9.8-9.8 9.8c-5.1 0-9.3-3.9-9.8-9L127.9 14.6C127.2 6.3 120.3 0 112 0s-15.2 6.3-15.9 14.6L83.7 151c-.5 5.1-4.7 9-9.8 9c-5.4 0-9.8-4.4-9.8-9.8L64 16zm48.3 152l-.3 0-.3 0 .3-.7 .3 .7z"/>
                                    </svg>
                                    Recipes
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/shopping">
                                    <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            viewBox="0 0 576 512"
                                            fill="currentColor"
                                            width="1em"
                                            height="1em"
                                            class="me-2"
                                    >
                                        <path d="M0 24C0 10.7 10.7 0 24 0L69.5 0c22 0 41.5 12.8 50.6 32l411 0c26.3 0 45.5 25 38.6 50.4l-41 152.3c-8.5 31.4-37 53.3-69.5 53.3l-288.5 0 5.4 28.5c2.2 11.3 12.1 19.5 23.6 19.5L488 336c13.3 0 24 10.7 24 24s-10.7 24-24 24l-288.3 0c-34.6 0-64.3-24.6-70.7-58.5L77.4 54.5c-.7-3.8-4-6.5-7.9-6.5L24 48C10.7 48 0 37.3 0 24zM128 464a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm336-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z"/>
                                    </svg>
                                    Shopping list
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/meals">
                                    <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            viewBox="0 0 448 512"
                                            fill="currentColor"
                                            width="1em"
                                            height="1em"
                                            class="me-2"
                                    >
                                        <path d="M96 32l0 32L48 64C21.5 64 0 85.5 0 112l0 48 448 0 0-48c0-26.5-21.5-48-48-48l-48 0 0-32c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 32L160 64l0-32c0-17.7-14.3-32-32-32S96 14.3 96 32zM448 192L0 192 0 464c0 26.5 21.5 48 48 48l352 0c26.5 0 48-21.5 48-48l0-272z"/>
                                    </svg>
                                    Meal plan
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>

            <main class="col py-4">
                <div class="container-lg">{{template "main" .}}</div>
            </main>
        </div>
    </div>

    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        {{template "toast" .}}
    </div>

    <script nonce="{{.Nonce}}" src="/static/js/bootstrap.bundle.min.js"></script>
    <script nonce="{{.Nonce}}">
        const toastContainer = document.querySelector(".toast-container");

        const showAllToast = () => {
            toastContainer.querySelectorAll(".toast").forEach((toastEl) => {
                const toast = new bootstrap.Toast(toastEl);
                toast.show();
            });
        };

        // Function to fetch and render HTML content into a specified element
        const fetchHTML = async (el, url, options) => {
            const res = await fetch(url, options);
            if (!res.ok) {
                console.error(`Request error: ${res.status}`);
                return;
            }

            const tmp = document.createElement("div");
            tmp.innerHTML = await res.text();

            // Extract specific parts of the response
            const main = tmp.querySelector("#main");
            const toast = tmp.querySelector("#toast");
            const scripts = tmp.querySelector("#scripts");

            // Replace the content of the target element
            el.innerHTML = main.innerHTML;

            // Update toast notifications
            toastContainer.innerHTML = toast.innerHTML;
            showAllToast();

            // Dynamically load and execute scripts from the fetched content
            scripts.querySelectorAll("script").forEach(oldScript => {
                const newScript = document.createElement("script");
                newScript.textContent = oldScript.textContent;
                el.appendChild(newScript);
            });
        };

        showAllToast();
    </script>
    {{block "scripts" .}}{{end}}
    </body>
    </html>
{{end}}
